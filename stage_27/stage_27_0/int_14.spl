

alias userSP R0;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 -1;


alias syscall R1;

syscall = [[PTBR + 2*(userSP - 5)/512]*512 + (userSP-5)%512];


//semlock
if(syscall == 19) then
  



  //mode change
  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 19;

  //check if index in range 0 to 7 only

  alias index R2;

  index = [[PTBR + 2*(userSP - 4)/512]*512 + (userSP-4)%512];



  alias RESOURCE_TABLE_ADDRESS R3;

  RESOURCE_TABLE_ADDRESS = ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]+1)*512 -16;

  alias semID R4;
  
  semID = [RESOURCE_TABLE_ADDRESS + index*2 + 1];


  while([SEMAPHORE_TABLE + semID*4]!= -1 && [SEMAPHORE_TABLE + semID*4] != [SYSTEM_STATUS_TABLE + 1]) do
       
       [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_SEMAPHORE;
       [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = semID;

       multipush(R0,R1,R2,R3,R4);
       call MOD_5;
       multipop(R0,R1,R2,R3,R4);

 endwhile;

 [SEMAPHORE_TABLE + semID*4 ] = [SYSTEM_STATUS_TABLE + 1];

[[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = 0;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;

 SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];



 ireturn;


endif;


//semunlock 
if(syscall == 20) then
  



  //mode change
  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 20;


  alias index R2;

  index = [[PTBR + 2*(userSP - 4)/512]*512 + (userSP-4)%512];

   alias RESOURCE_TABLE_ADDRESS R3;

  RESOURCE_TABLE_ADDRESS = ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]+1)*512 -16;

  alias semID R4;
  
  semID = [RESOURCE_TABLE_ADDRESS + index*2 + 1];

  [[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = -2;

  if([SEMAPHORE_TABLE + semID*4] == [SYSTEM_STATUS_TABLE + 1]) then
       

       [[PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = 0;

       [SEMAPHORE_TABLE + semID*4] = -1;

       alias i R5;
       i= 0;

       while(i<16) do

           if([PROCESS_TABLE + i*16 + 4] == WAIT_SEMAPHORE && [PROCESS_TABLE + i*16 + 5] == semID) then

              [PROCESS_TABLE + i*16 + 4] = READY;

           endif;
               
        i = i+ 1;

        endwhile;

 endif;

  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
  SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];


  ireturn;

endif;
  










 




