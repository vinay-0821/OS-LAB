alias  userSP R0;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 -1;


alias syscall R1;

syscall = [[PTBR+ 2*(userSP-5)/512]*512 + (userSP-5)%512];

//get pid
if(syscall == 11) then

        [[PTBR+ 2*(userSP-1)/512]*512 + (userSP-1)%512] = [SYSTEM_STATUS_TABLE + 1];
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
        SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];

        ireturn;
endif;


//get ppid 
if(syscall == 12) then
       
        [[PTBR+ 2*(userSP-1)/512]*512 + (userSP-1)%512] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 2];
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
        SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];

        ireturn;
endif;


 //wait syscall
if(syscall == 13) then
     

     [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 13;
     alias wait_pid R2;

     wait_pid = [[PTBR+ 2*(userSP-4)/512]*512 + (userSP-4)%512];



     if(0<= wait_pid && wait_pid < 16 && wait_pid!= [SYSTEM_STATUS_TABLE + 1] && [PROCESS_TABLE + wait_pid*16 + 4] != TERMINATED) then
           
           [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_PROCESS;
           [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = wait_pid;
           

           multipush(R0);
           call MOD_5;
           multipop(R0);
           
           [[PTBR+ 2*(userSP-1)/512]*512 + (userSP-1)%512] = 0;
           [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
           SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
           
           ireturn;
     else 

         [[PTBR+ 2*(userSP-1)/512]*512 + (userSP-1)%512] = -1;
         [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
         SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];

         ireturn;

    endif;
endif;

//signal 
if(syscall == 14) then
    
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 14;

    alias i R2;
    i=0;

    while(i<16) do
       
       if([PROCESS_TABLE + i*16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + i*16 + 5] == [SYSTEM_STATUS_TABLE + 1])  then
              
              [PROCESS_TABLE + i*16 + 4] = READY;

        endif;

        i = i+1;

    endwhile;

    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];

    ireturn;

endif;       