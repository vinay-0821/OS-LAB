//module-7
loadi(54,67);
loadi(55,68);

//idle
loadi(69,11);

SP=76*512-1;

call MOD_7;

//setting pagetable
PTBR=PAGE_TABLE_BASE;
PTLR=10;

//library
[PTBR+0]=-1;
[PTBR+1]="0000";
[PTBR+2]=-1;
[PTBR+3]="0000";

//heap
[PTBR+4]=-1;
[PTBR+5]="0000";
[PTBR+6]=-1;
[PTBR+7]="0000";

//code
[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=-1;
[PTBR+11]="0000";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=70;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";

//setting process table
[PROCESS_TABLE + 1]=0;
[PROCESS_TABLE + 4]=RUNNING;
[PROCESS_TABLE + 11]=76;
[PROCESS_TABLE + 12]=0;
[PROCESS_TABLE + 13]=8*512;
[PROCESS_TABLE + 14]=PTBR;
[PROCESS_TABLE + 15]=PTLR;

[SYSTEM_STATUS_TABLE +1]=0;
[70*512]=[69*512+1];
SP=8*512;



[SYSTEM_STATUS_TABLE + 2] = 47;
[SYSTEM_STATUS_TABLE + 3] = 0;
[TERMINAL_STATUS_TABLE + 0] = 0;
[DISK_STATUS_TABLE + 0 ] = 0;

alias i R0;
i = 0;
alias j R1;

while(i<16)  do
   
   j = 2;
   while(j<10) do

     [DISK_MAP_TABLE + i*10 + j] = -1;
     j= j+1;

    endwhile;
i=i+1;
endwhile;

[DISK_MAP_TABLE + 24] = 9;
[DISK_MAP_TABLE + 25] = 10;

i = 0;
while(i<32) do

    [SEMAPHORE_TABLE + i*4 ] = -1;
    [SEMAPHORE_TABLE + i*4 + 1] = 0;
    i =i+1;

endwhile;



i =0;
while(i<4) do
     
    [BUFFER_TABLE + i*4 ] = -1;     //block number
    [BUFFER_TABLE + i*4 + 1] = 0;   //dirty bit
    [BUFFER_TABLE + i*4 + 2] = -1;  //locking pid
    
    i = i + 1;

endwhile;

i =0;
while(i<60) do
    
    [FILE_STATUS_TABLE + i*4] = -1;
    [FILE_STATUS_TABLE + i*4 + 1] = -1;
    i =i+1;
    
endwhile;

i =0;
while(i< 32) do
    
    [OPEN_FILE_TABLE + i*4 ] = -1;
    [OPEN_FILE_TABLE + i*4 + 1] =0;
    i = i+1;

endwhile;


i = 0;
while(i < 128) do 
    if(i < 81) then 
        [MEMORY_FREE_LIST + i] = 1;
    else
        [MEMORY_FREE_LIST + i] = 0;
    endif;
    i = i + 1;
endwhile;


ireturn;
